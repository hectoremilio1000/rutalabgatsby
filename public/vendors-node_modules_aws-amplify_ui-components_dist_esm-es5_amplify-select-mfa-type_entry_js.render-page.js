exports.id = "vendors-node_modules_aws-amplify_ui-components_dist_esm-es5_amplify-select-mfa-type_entry_js";
exports.ids = ["vendors-node_modules_aws-amplify_ui-components_dist_esm-es5_amplify-select-mfa-type_entry_js"];
exports.modules = {

/***/ "./node_modules/@aws-amplify/ui-components/dist/esm-es5/Translations-c833f663.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/ui-components/dist/esm-es5/Translations-c833f663.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "T": () => (/* binding */ Translations)
/* harmony export */ });
/* harmony import */ var _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/auth */ "./node_modules/@aws-amplify/auth/lib-esm/common/AuthErrorStrings.js");

var AuthStrings;
(function (AuthStrings) {
    AuthStrings["BACK_TO_SIGN_IN"] = "Back to Sign In";
    AuthStrings["CHANGE_PASSWORD_ACTION"] = "Change";
    AuthStrings["CHANGE_PASSWORD"] = "Change Password";
    AuthStrings["CODE_LABEL"] = "Verification code";
    AuthStrings["CODE_PLACEHOLDER"] = "Enter code";
    AuthStrings["CONFIRM_SIGN_UP_CODE_LABEL"] = "Confirmation Code";
    AuthStrings["CONFIRM_SIGN_UP_CODE_PLACEHOLDER"] = "Enter your code";
    AuthStrings["CONFIRM_SIGN_UP_HEADER_TEXT"] = "Confirm Sign up";
    AuthStrings["CONFIRM_SIGN_UP_LOST_CODE"] = "Lost your code?";
    AuthStrings["CONFIRM_SIGN_UP_RESEND_CODE"] = "Resend Code";
    AuthStrings["CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT"] = "Confirm";
    AuthStrings["CONFIRM_SMS_CODE"] = "Confirm SMS Code";
    AuthStrings["CONFIRM_TOTP_CODE"] = "Confirm TOTP Code";
    AuthStrings["CONFIRM"] = "Confirm";
    AuthStrings["CREATE_ACCOUNT_TEXT"] = "Create account";
    AuthStrings["EMAIL_LABEL"] = "Email Address *";
    AuthStrings["EMAIL_PLACEHOLDER"] = "Enter your email address";
    AuthStrings["FORGOT_PASSWORD_TEXT"] = "Forgot your password?";
    AuthStrings["LESS_THAN_TWO_MFA_VALUES_MESSAGE"] = "Less than two MFA types available";
    AuthStrings["NEW_PASSWORD_LABEL"] = "New password";
    AuthStrings["NEW_PASSWORD_PLACEHOLDER"] = "Enter your new password";
    AuthStrings["NO_ACCOUNT_TEXT"] = "No account?";
    AuthStrings["USERNAME_REMOVE_WHITESPACE"] = "Username cannot contain whitespace";
    AuthStrings["PASSWORD_REMOVE_WHITESPACE"] = "Password cannot start or end with whitespace";
    AuthStrings["PASSWORD_LABEL"] = "Password *";
    AuthStrings["PASSWORD_PLACEHOLDER"] = "Enter your password";
    AuthStrings["PHONE_LABEL"] = "Phone Number *";
    AuthStrings["PHONE_PLACEHOLDER"] = "(555) 555-1212";
    AuthStrings["QR_CODE_ALT"] = "qrcode";
    AuthStrings["RESET_PASSWORD_TEXT"] = "Reset password";
    AuthStrings["RESET_YOUR_PASSWORD"] = "Reset your password";
    AuthStrings["SELECT_MFA_TYPE_HEADER_TEXT"] = "Select MFA Type";
    AuthStrings["SELECT_MFA_TYPE_SUBMIT_BUTTON_TEXT"] = "Verify";
    AuthStrings["SEND_CODE"] = "Send Code";
    AuthStrings["SUBMIT"] = "Submit";
    AuthStrings["SETUP_TOTP_REQUIRED"] = "TOTP needs to be configured";
    AuthStrings["SIGN_IN_ACTION"] = "Sign In";
    AuthStrings["SIGN_IN_HEADER_TEXT"] = "Sign in to your account";
    AuthStrings["SIGN_IN_TEXT"] = "Sign in";
    AuthStrings["SIGN_IN_WITH_AMAZON"] = "Sign in with Amazon";
    AuthStrings["SIGN_IN_WITH_AUTH0"] = "Sign in with Auth0";
    AuthStrings["SIGN_IN_WITH_AWS"] = "Sign in with AWS";
    AuthStrings["SIGN_IN_WITH_FACEBOOK"] = "Sign in with Facebook";
    AuthStrings["SIGN_IN_WITH_GOOGLE"] = "Sign in with Google";
    AuthStrings["SIGN_OUT"] = "Sign Out";
    AuthStrings["SIGN_UP_EMAIL_PLACEHOLDER"] = "Email";
    AuthStrings["SIGN_UP_HAVE_ACCOUNT_TEXT"] = "Have an account?";
    AuthStrings["SIGN_UP_HEADER_TEXT"] = "Create a new account";
    AuthStrings["SIGN_UP_PASSWORD_PLACEHOLDER"] = "Password";
    AuthStrings["SIGN_UP_SUBMIT_BUTTON_TEXT"] = "Create Account";
    AuthStrings["SIGN_UP_USERNAME_PLACEHOLDER"] = "Username";
    AuthStrings["SUCCESS_MFA_TYPE"] = "Success! Your MFA Type is now:";
    AuthStrings["TOTP_HEADER_TEXT"] = "Scan then enter verification code";
    AuthStrings["TOTP_LABEL"] = "Enter Security Code:";
    AuthStrings["TOTP_ISSUER"] = "AWSCognito";
    AuthStrings["TOTP_SETUP_FAILURE"] = "TOTP Setup has failed";
    AuthStrings["TOTP_SUBMIT_BUTTON_TEXT"] = "Verify Security Token";
    AuthStrings["TOTP_SUCCESS_MESSAGE"] = "Setup TOTP successfully!";
    AuthStrings["UNABLE_TO_SETUP_MFA_AT_THIS_TIME"] = "Failed! Unable to configure MFA at this time";
    AuthStrings["USERNAME_LABEL"] = "Username *";
    AuthStrings["USERNAME_PLACEHOLDER"] = "Enter your username";
    AuthStrings["VERIFY_CONTACT_EMAIL_LABEL"] = "Email";
    AuthStrings["VERIFY_CONTACT_HEADER_TEXT"] = "Account recovery requires verified contact information";
    AuthStrings["VERIFY_CONTACT_PHONE_LABEL"] = "Phone Number";
    AuthStrings["VERIFY_CONTACT_SUBMIT_LABEL"] = "Submit";
    AuthStrings["VERIFY_CONTACT_VERIFY_LABEL"] = "Verify";
    AuthStrings["ADDRESS_LABEL"] = "Address";
    AuthStrings["ADDRESS_PLACEHOLDER"] = "Enter your address";
    AuthStrings["NICKNAME_LABEL"] = "Nickname";
    AuthStrings["NICKNAME_PLACEHOLDER"] = "Enter your nickname";
    AuthStrings["BIRTHDATE_LABEL"] = "Birthday";
    AuthStrings["BIRTHDATE_PLACEHOLDER"] = "Enter your birthday";
    AuthStrings["PICTURE_LABEL"] = "Picture URL";
    AuthStrings["PICTURE_PLACEHOLDER"] = "Enter your picture URL";
    AuthStrings["FAMILY_NAME_LABEL"] = "Family Name";
    AuthStrings["FAMILY_NAME_PLACEHOLDER"] = "Enter your family name";
    AuthStrings["PREFERRED_USERNAME_LABEL"] = "Preferred Username";
    AuthStrings["PREFERRED_USERNAME_PLACEHOLDER"] = "Enter your preferred username";
    AuthStrings["GENDER_LABEL"] = "Gender";
    AuthStrings["GENDER_PLACEHOLDER"] = "Enter your gender";
    AuthStrings["PROFILE_LABEL"] = "Profile URL";
    AuthStrings["PROFILE_PLACEHOLDER"] = "Enter your profile URL";
    AuthStrings["GIVEN_NAME_LABEL"] = "First Name";
    AuthStrings["GIVEN_NAME_PLACEHOLDER"] = "Enter your first name";
    AuthStrings["ZONEINFO_LABEL"] = "Time zone";
    AuthStrings["ZONEINFO_PLACEHOLDER"] = "Enter your time zone";
    AuthStrings["LOCALE_LABEL"] = "Locale";
    AuthStrings["LOCALE_PLACEHOLDER"] = "Enter your locale";
    AuthStrings["UPDATED_AT_LABEL"] = "Updated At";
    AuthStrings["UPDATED_AT_PLACEHOLDER"] = "Enter the time the information was last updated";
    AuthStrings["MIDDLE_NAME_LABEL"] = "Middle Name";
    AuthStrings["MIDDLE_NAME_PLACEHOLDER"] = "Enter your middle name";
    AuthStrings["WEBSITE_LABEL"] = "Website";
    AuthStrings["WEBSITE_PLACEHOLDER"] = "Enter your website";
    AuthStrings["NAME_LABEL"] = "Full Name";
    AuthStrings["NAME_PLACEHOLDER"] = "Enter your full name";
    AuthStrings["PHOTO_PICKER_TITLE"] = "Picker Title";
    AuthStrings["PHOTO_PICKER_HINT"] = "Ancillary text or content may occupy this space here";
    AuthStrings["PHOTO_PICKER_PLACEHOLDER_HINT"] = "Placeholder hint";
    AuthStrings["PHOTO_PICKER_BUTTON_TEXT"] = "Button";
    AuthStrings["IMAGE_PICKER_TITLE"] = "Add Profile Photo";
    AuthStrings["IMAGE_PICKER_HINT"] = "Preview the image before upload";
    AuthStrings["IMAGE_PICKER_PLACEHOLDER_HINT"] = "Tap to image select";
    AuthStrings["IMAGE_PICKER_BUTTON_TEXT"] = "Upload";
    AuthStrings["PICKER_TEXT"] = "Pick a file";
    AuthStrings["TEXT_FALLBACK_CONTENT"] = "Fallback Content";
    AuthStrings["CONFIRM_SIGN_UP_FAILED"] = "Confirm Sign Up Failed";
    AuthStrings["SIGN_UP_FAILED"] = "Sign Up Failed";
})(AuthStrings || (AuthStrings = {}));
var InteractionsStrings;
(function (InteractionsStrings) {
    InteractionsStrings["CHATBOT_TITLE"] = "ChatBot Lex";
    InteractionsStrings["TEXT_INPUT_PLACEHOLDER"] = "Write a message";
    InteractionsStrings["VOICE_INPUT_PLACEHOLDER"] = "Click mic to speak";
    InteractionsStrings["CHAT_DISABLED_ERROR"] = "Error: Either voice or text must be enabled for the chatbot";
    InteractionsStrings["NO_BOT_NAME_ERROR"] = "Error: Bot name must be provided to ChatBot";
})(InteractionsStrings || (InteractionsStrings = {}));
var Translations = Object.assign(Object.assign(Object.assign({}, AuthStrings), _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.AuthErrorStrings), InteractionsStrings);



/***/ }),

/***/ "./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-select-mfa-type.entry.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-select-mfa-type.entry.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "amplify_select_mfa_type": () => (/* binding */ AmplifySelectMFAType)
/* harmony export */ });
/* harmony import */ var _index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-83f2275b.js */ "./node_modules/@aws-amplify/ui-components/dist/esm-es5/index-83f2275b.js");
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ "./node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js");
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-amplify/core */ "./node_modules/@aws-amplify/core/lib-esm/I18n/index.js");
/* harmony import */ var _auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth-types-78df304e.js */ "./node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js");
/* harmony import */ var _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-amplify/auth */ "./node_modules/@aws-amplify/auth/lib-esm/Auth.js");
/* harmony import */ var _Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Translations-c833f663.js */ "./node_modules/@aws-amplify/ui-components/dist/esm-es5/Translations-c833f663.js");
/* harmony import */ var _constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants-d1abe7de.js */ "./node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-d1abe7de.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.ConsoleLogger('SelectMFAType');
var AmplifySelectMFAType = /** @class */ (function () {
    function class_1(hostRef) {
        var _this = this;
        (0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /** Fires when Verify is clicked */
        this.handleSubmit = function (event) { return _this.verify(event); };
        this.TOTPSetup = false;
        this.selectMessage = null;
        this.MFAMethod = null;
        this.isTOTP = false;
        this.isNoMFA = false;
        this.isSMS = false;
        this.loading = false;
    }
    class_1.prototype.handleRadioButtonChange = function (event) {
        this.TOTPSetup = false;
        this.selectMessage = null;
        // Reseting state values to default
        this.isNoMFA = false;
        this.isTOTP = false;
        this.isSMS = false;
        var _a = event.target, value = _a.value, type = _a.type, checked = _a.checked;
        var checkType = ['radio', 'checkbox'].includes(type);
        if (value === _auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_1__.M.SMS && checkType) {
            this.isSMS = checked;
        }
        if (value === _auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_1__.M.TOTP && checkType) {
            this.isTOTP = checked;
        }
        if (value === _auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_1__.M.NOMFA && checkType) {
            this.isNoMFA = checked;
        }
    };
    class_1.prototype.verify = function (event) {
        return __awaiter(this, void 0, void 0, function () {
            var user, preferredMFAData, error_1, message;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // avoid submitting the form
                        if (event) {
                            event.preventDefault();
                        }
                        logger.debug('MFA Type Values', {
                            TOTP: this.isTOTP,
                            SMS: this.isSMS,
                            'No MFA': this.isNoMFA,
                        });
                        if (this.isTOTP) {
                            this.MFAMethod = _auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_1__.M.TOTP;
                        }
                        else if (this.isSMS) {
                            this.MFAMethod = _auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_1__.M.SMS;
                        }
                        else if (this.isNoMFA) {
                            this.MFAMethod = _auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_1__.M.NOMFA;
                        }
                        user = this.authData;
                        if (!_aws_amplify_auth__WEBPACK_IMPORTED_MODULE_5__.Auth || typeof _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_5__.Auth.setPreferredMFA !== 'function') {
                            throw new Error(_constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_3__.N);
                        }
                        this.loading = true;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, 4, 5]);
                        return [4 /*yield*/, _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_5__.Auth.setPreferredMFA(user, this.MFAMethod)];
                    case 2:
                        preferredMFAData = _a.sent();
                        logger.debug('Set Preferred MFA Succeeded', preferredMFAData);
                        this.selectMessage = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.I18n.get(_Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_2__.T.SUCCESS_MFA_TYPE) + " " + this.MFAMethod;
                        return [3 /*break*/, 5];
                    case 3:
                        error_1 = _a.sent();
                        message = error_1.message;
                        if (message === _constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_3__.f ||
                            message === _constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_3__.g) {
                            this.TOTPSetup = true;
                            this.selectMessage = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.I18n.get(_Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_2__.T.SETUP_TOTP_REQUIRED);
                            // 	TODO Add Toast = showToast: true,
                        }
                        else {
                            logger.debug('Set Preferred MFA failed', error_1);
                            this.selectMessage = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.I18n.get(_Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_2__.T.UNABLE_TO_SETUP_MFA_AT_THIS_TIME);
                            // 	TODO Add Toast = showToast: true,
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        this.loading = false;
                        return [7 /*endfinally*/];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    class_1.prototype.contentBuilder = function () {
        var _this = this;
        if (!this.MFATypes || Object.keys(this.MFATypes).length < 2) {
            logger.debug(_aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.I18n.get(_Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_2__.T.LESS_THAN_TWO_MFA_VALUES_MESSAGE));
            return ((0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", null, _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.I18n.get(_Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_2__.T.LESS_THAN_TWO_MFA_VALUES_MESSAGE))));
        }
        var _a = this.MFATypes, SMS = _a.SMS, TOTP = _a.TOTP, Optional = _a.Optional;
        return (
        // TODO: Add Toast messages
        (0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.h)("amplify-form-section", { submitButtonText: _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.I18n.get(_Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_2__.T.SELECT_MFA_TYPE_SUBMIT_BUTTON_TEXT), headerText: _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.I18n.get(_Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_2__.T.SELECT_MFA_TYPE_HEADER_TEXT), handleSubmit: function (event) { return _this.handleSubmit(event); }, loading: this.loading }, SMS ? ((0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.h)("amplify-radio-button", { key: "sms", name: "MFAType", value: "SMS", label: "SMS", handleInputChange: function (event) { return _this.handleRadioButtonChange(event); } })) : null, TOTP ? ((0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.h)("amplify-radio-button", { key: "totp", name: "MFAType", value: "TOTP", label: "TOTP", handleInputChange: function (event) { return _this.handleRadioButtonChange(event); } })) : null, Optional ? ((0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.h)("amplify-radio-button", { key: "noMFA", name: "MFAType", value: "NOMFA", label: "No MFA", handleInputChange: function (event) { return _this.handleRadioButtonChange(event); } })) : null));
    };
    class_1.prototype.render = function () {
        return ((0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, this.contentBuilder(), this.TOTPSetup ? (0,_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__.h)("amplify-totp-setup", { user: this.authData }) : null));
    };
    return class_1;
}());



/***/ }),

/***/ "./node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "A": () => (/* binding */ AuthState),
/* harmony export */   "C": () => (/* binding */ ChallengeName),
/* harmony export */   "M": () => (/* binding */ MfaOption),
/* harmony export */   "U": () => (/* binding */ UsernameAlias),
/* harmony export */   "a": () => (/* binding */ AuthFormField)
/* harmony export */ });
// TODO: Move these values to or extract them from the Cognito Provider in the Auth category for Auth V2
var AuthState;
(function (AuthState) {
    AuthState["SignUp"] = "signup";
    AuthState["SignOut"] = "signout";
    AuthState["SignIn"] = "signin";
    AuthState["Loading"] = "loading";
    AuthState["SignedOut"] = "signedout";
    AuthState["SignedIn"] = "signedin";
    AuthState["SigningUp"] = "signingup";
    AuthState["ConfirmSignUp"] = "confirmSignUp";
    AuthState["confirmingSignUpCustomFlow"] = "confirmsignupcustomflow";
    AuthState["ConfirmSignIn"] = "confirmSignIn";
    AuthState["confirmingSignInCustomFlow"] = "confirmingsignincustomflow";
    AuthState["VerifyingAttributes"] = "verifyingattributes";
    AuthState["ForgotPassword"] = "forgotpassword";
    AuthState["ResetPassword"] = "resettingpassword";
    AuthState["SettingMFA"] = "settingMFA";
    AuthState["TOTPSetup"] = "TOTPSetup";
    AuthState["CustomConfirmSignIn"] = "customConfirmSignIn";
    AuthState["VerifyContact"] = "verifyContact";
})(AuthState || (AuthState = {}));
var MfaOption;
(function (MfaOption) {
    MfaOption["TOTP"] = "TOTP";
    MfaOption["SMS"] = "SMS";
    MfaOption["NOMFA"] = "NOMFA";
})(MfaOption || (MfaOption = {}));
var ChallengeName;
(function (ChallengeName) {
    ChallengeName["SoftwareTokenMFA"] = "SOFTWARE_TOKEN_MFA";
    ChallengeName["SMSMFA"] = "SMS_MFA";
    ChallengeName["NewPasswordRequired"] = "NEW_PASSWORD_REQUIRED";
    ChallengeName["MFASetup"] = "MFA_SETUP";
    ChallengeName["CustomChallenge"] = "CUSTOM_CHALLENGE";
})(ChallengeName || (ChallengeName = {}));
var AuthFormField;
(function (AuthFormField) {
    AuthFormField["Password"] = "password";
})(AuthFormField || (AuthFormField = {}));
var UsernameAlias;
(function (UsernameAlias) {
    UsernameAlias["username"] = "username";
    UsernameAlias["email"] = "email";
    UsernameAlias["phone_number"] = "phone_number";
})(UsernameAlias || (UsernameAlias = {}));



/***/ }),

/***/ "./node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-d1abe7de.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-d1abe7de.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "A": () => (/* binding */ AUTH_CHANNEL),
/* harmony export */   "C": () => (/* binding */ COUNTRY_DIAL_CODE_SUFFIX),
/* harmony export */   "E": () => (/* binding */ EMAIL_SUFFIX),
/* harmony export */   "N": () => (/* binding */ NO_AUTH_MODULE_FOUND),
/* harmony export */   "P": () => (/* binding */ PHONE_EMPTY_ERROR_MESSAGE),
/* harmony export */   "R": () => (/* binding */ REDIRECTED_FROM_HOSTED_UI),
/* harmony export */   "S": () => (/* binding */ SETUP_TOTP),
/* harmony export */   "T": () => (/* binding */ TOAST_AUTH_ERROR_EVENT),
/* harmony export */   "U": () => (/* binding */ UI_AUTH_CHANNEL),
/* harmony export */   "a": () => (/* binding */ AUTH_STATE_CHANGE_EVENT),
/* harmony export */   "b": () => (/* binding */ PHONE_SUFFIX),
/* harmony export */   "c": () => (/* binding */ AUTHENTICATOR_AUTHSTATE),
/* harmony export */   "d": () => (/* binding */ NO_INTERACTIONS_MODULE_FOUND),
/* harmony export */   "e": () => (/* binding */ NO_STORAGE_MODULE_FOUND),
/* harmony export */   "f": () => (/* binding */ USER_NOT_SETUP_SOFTWARE_TOKEN_MFA),
/* harmony export */   "g": () => (/* binding */ USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA),
/* harmony export */   "h": () => (/* binding */ COUNTRY_DIAL_CODE_DEFAULT),
/* harmony export */   "i": () => (/* binding */ SUCCESS),
/* harmony export */   "j": () => (/* binding */ AUTH_SOURCE_KEY),
/* harmony export */   "k": () => (/* binding */ CODE_SUFFIX),
/* harmony export */   "l": () => (/* binding */ PASSWORD_SUFFIX),
/* harmony export */   "m": () => (/* binding */ USERNAME_SUFFIX)
/* harmony export */ });
// Dictionaries
// fieldId constants
var USERNAME_SUFFIX = 'username';
var EMAIL_SUFFIX = 'email';
var CODE_SUFFIX = 'code';
var PHONE_SUFFIX = 'phone';
var PASSWORD_SUFFIX = 'password';
// Country Dial Code common constants
var COUNTRY_DIAL_CODE_SUFFIX = 'country-dial-code-select';
var COUNTRY_DIAL_CODE_DEFAULT = '+1';
// Auth Keys
var AUTH_SOURCE_KEY = 'amplify-auth-source';
var REDIRECTED_FROM_HOSTED_UI = 'amplify-redirected-from-hosted-ui';
var AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState';
// Error message Common Constants
var PHONE_EMPTY_ERROR_MESSAGE = 'Phone number can not be empty';
var NO_AUTH_MODULE_FOUND = 'No Auth module found, please ensure @aws-amplify/auth is imported';
var NO_STORAGE_MODULE_FOUND = 'No Storage module found, please ensure @aws-amplify/storage is imported';
var NO_INTERACTIONS_MODULE_FOUND = 'No Interactions module found, please ensure @aws-amplify/interactions is imported';
// TOTP Messages
var SETUP_TOTP = 'SETUP_TOTP';
// Select MFA Types Messages
var USER_NOT_SETUP_SOFTWARE_TOKEN_MFA = 'User has not set up software token mfa';
var USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA = 'User has not verified software token mfa';
// Common events
var SUCCESS = 'SUCCESS';
// Hub Events and Channels
var AUTH_CHANNEL = 'auth';
var UI_AUTH_CHANNEL = 'UI Auth';
var TOAST_AUTH_ERROR_EVENT = 'ToastAuthError';
var AUTH_STATE_CHANGE_EVENT = 'AuthStateChange';



/***/ })

};
;
//# sourceMappingURL=vendors-node_modules_aws-amplify_ui-components_dist_esm-es5_amplify-select-mfa-type_entry_js.render-page.js.map